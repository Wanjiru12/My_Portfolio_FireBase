{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cwmwai\\\\Desktop\\\\Moringa School\\\\Assignment 1-Silver\\\\My_Portfolio_FireBase\\\\src\\\\admindashboard.js\",\n  _s = $RefreshSig$();\n// src/AdminDashboard.js\nimport React, { useState, useEffect } from 'react';\nimport { collection, getDocs, updateDoc, doc } from 'firebase/firestore';\nimport { db, auth } from './firebase';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport SignIn from './signin';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const [user] = useAuthState(auth);\n  const [projects, setProjects] = useState([]);\n  const [skills, setSkills] = useState([]);\n  const [bio, setBio] = useState('');\n  const [newProject, setNewProject] = useState('');\n  const [newSkill, setNewSkill] = useState('');\n  const [newBio, setNewBio] = useState('');\n  useEffect(() => {\n    if (user) {\n      const fetchData = async () => {\n        var _bioSnapshot$docs$;\n        // Fetch projects\n        const projectsSnapshot = await getDocs(collection(db, 'projects'));\n        const projectList = projectsSnapshot.docs.map(doc => doc.data());\n        setProjects(projectList);\n\n        // Fetch skills\n        const skillsSnapshot = await getDocs(collection(db, 'skills'));\n        const skillList = skillsSnapshot.docs.map(doc => doc.data());\n        setSkills(skillList);\n\n        // Fetch bio\n        const bioSnapshot = await getDocs(collection(db, 'bio'));\n        setBio((_bioSnapshot$docs$ = bioSnapshot.docs[0]) === null || _bioSnapshot$docs$ === void 0 ? void 0 : _bioSnapshot$docs$.data().bio);\n      };\n      fetchData();\n    }\n  }, [user]);\n  const handleUpdateProject = async () => {\n    if (newProject) {\n      const projectRef = doc(db, 'projects', 'project-id'); // Replace 'project-id' with actual project ID\n      await updateDoc(projectRef, {\n        name: newProject\n      });\n      setNewProject('');\n    }\n  };\n  const handleUpdateSkill = async () => {\n    if (newSkill) {\n      const skillRef = doc(db, 'skills', 'skill-id'); // Replace with actual skill ID\n      await updateDoc(skillRef, {\n        name: newSkill\n      });\n      setNewSkill('');\n    }\n  };\n  const handleUpdateBio = async () => {\n    if (newBio) {\n      const bioRef = doc(db, 'bio', 'bio-id'); // Replace with actual bio ID\n      await updateDoc(bioRef, {\n        bio: newBio\n      });\n      setNewBio('');\n    }\n  };\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(SignIn, {\n      onSignIn: () => {}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: projects.map((project, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: project.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newProject,\n        onChange: e => setNewProject(e.target.value),\n        placeholder: \"New Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdateProject,\n        children: \"Add Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Skills\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: skills.map((skill, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: skill.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newSkill,\n        onChange: e => setNewSkill(e.target.value),\n        placeholder: \"New Skill\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdateSkill,\n        children: \"Add Skill\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Bio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newBio,\n        onChange: e => setNewBio(e.target.value),\n        placeholder: \"New Bio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdateBio,\n        children: \"Update Bio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"8kfhQzYifJvlWRpY2lSyDxvpM/k=\", false, function () {\n  return [useAuthState];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","collection","getDocs","updateDoc","doc","db","auth","useAuthState","SignIn","jsxDEV","_jsxDEV","AdminDashboard","_s","user","projects","setProjects","skills","setSkills","bio","setBio","newProject","setNewProject","newSkill","setNewSkill","newBio","setNewBio","fetchData","_bioSnapshot$docs$","projectsSnapshot","projectList","docs","map","data","skillsSnapshot","skillList","bioSnapshot","handleUpdateProject","projectRef","name","handleUpdateSkill","skillRef","handleUpdateBio","bioRef","onSignIn","fileName","_jsxFileName","lineNumber","columnNumber","children","project","index","type","value","onChange","e","target","placeholder","onClick","skill","_c","$RefreshReg$"],"sources":["C:/Users/cwmwai/Desktop/Moringa School/Assignment 1-Silver/My_Portfolio_FireBase/src/admindashboard.js"],"sourcesContent":["// src/AdminDashboard.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { collection, getDocs, updateDoc, doc } from 'firebase/firestore';\r\nimport { db, auth } from './firebase';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\n\r\nimport SignIn from './signin';\r\n\r\nconst AdminDashboard = () => {\r\n  const [user] = useAuthState(auth);\r\n  const [projects, setProjects] = useState([]);\r\n  const [skills, setSkills] = useState([]);\r\n  const [bio, setBio] = useState('');\r\n  const [newProject, setNewProject] = useState('');\r\n  const [newSkill, setNewSkill] = useState('');\r\n  const [newBio, setNewBio] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      const fetchData = async () => {\r\n        // Fetch projects\r\n        const projectsSnapshot = await getDocs(collection(db, 'projects'));\r\n        const projectList = projectsSnapshot.docs.map(doc => doc.data());\r\n        setProjects(projectList);\r\n\r\n        // Fetch skills\r\n        const skillsSnapshot = await getDocs(collection(db, 'skills'));\r\n        const skillList = skillsSnapshot.docs.map(doc => doc.data());\r\n        setSkills(skillList);\r\n\r\n        // Fetch bio\r\n        const bioSnapshot = await getDocs(collection(db, 'bio'));\r\n        setBio(bioSnapshot.docs[0]?.data().bio);\r\n      };\r\n\r\n      fetchData();\r\n    }\r\n  }, [user]);\r\n\r\n  const handleUpdateProject = async () => {\r\n    if (newProject) {\r\n      const projectRef = doc(db, 'projects', 'project-id');  // Replace 'project-id' with actual project ID\r\n      await updateDoc(projectRef, { name: newProject });\r\n      setNewProject('');\r\n    }\r\n  };\r\n\r\n  const handleUpdateSkill = async () => {\r\n    if (newSkill) {\r\n      const skillRef = doc(db, 'skills', 'skill-id');  // Replace with actual skill ID\r\n      await updateDoc(skillRef, { name: newSkill });\r\n      setNewSkill('');\r\n    }\r\n  };\r\n\r\n  const handleUpdateBio = async () => {\r\n    if (newBio) {\r\n      const bioRef = doc(db, 'bio', 'bio-id');  // Replace with actual bio ID\r\n      await updateDoc(bioRef, { bio: newBio });\r\n      setNewBio('');\r\n    }\r\n  };\r\n\r\n  if (!user) {\r\n    return <SignIn onSignIn={() => {}} />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Admin Dashboard</h1>\r\n      <div>\r\n        <h2>Projects</h2>\r\n        <ul>\r\n          {projects.map((project, index) => (\r\n            <li key={index}>{project.name}</li>\r\n          ))}\r\n        </ul>\r\n        <input\r\n          type=\"text\"\r\n          value={newProject}\r\n          onChange={(e) => setNewProject(e.target.value)}\r\n          placeholder=\"New Project\"\r\n        />\r\n        <button onClick={handleUpdateProject}>Add Project</button>\r\n      </div>\r\n\r\n      <div>\r\n        <h2>Skills</h2>\r\n        <ul>\r\n          {skills.map((skill, index) => (\r\n            <li key={index}>{skill.name}</li>\r\n          ))}\r\n        </ul>\r\n        <input\r\n          type=\"text\"\r\n          value={newSkill}\r\n          onChange={(e) => setNewSkill(e.target.value)}\r\n          placeholder=\"New Skill\"\r\n        />\r\n        <button onClick={handleUpdateSkill}>Add Skill</button>\r\n      </div>\r\n\r\n      <div>\r\n        <h2>Bio</h2>\r\n        <textarea\r\n          value={newBio}\r\n          onChange={(e) => setNewBio(e.target.value)}\r\n          placeholder=\"New Bio\"\r\n        />\r\n        <button onClick={handleUpdateBio}>Update Bio</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}